#!/bin/bash

# {{ ansible_managed }}

WORKDIR={{ item.work_dir|default(backup_work) }}/{{ item.name }}

{% if item.source.startswith('postgresql://') %}

DBNAME={{ item.source.split('postgresql://')[-1]}}
pg_dump {{ ('-U %s' % backup_postgres_user) if backup_postgres_user else '' }} {{ ('-h %s' % backup_postgres_host) if backup_postgres_host else ''}} {{ ('-p %s' % backup_postgres_port) if backup_postgres_port else ''}} -c $DBNAME -f ${WORKDIR}/dump

{% elif item.source.startswith('mysql://') %}

{% if item.source == 'mysql://' %}
# Dump all databases
DBNAME='--all-databases'
{% else %}
# Dump the passed database
DBNAME={{ item.source.split('mysql://')[-1]}}
{% endif %}

mysqldump --skip-lock-tables --single-transaction {{ ('-h %s' % backup_mysql_host) if backup_mysql_host else ''}} {{ '-u %s' % backup_mysql_user if backup_mysql_user else '' }} {{ '-p%s' % (backup_mysql_pass|quote) if backup_mysql_pass else '' }} $DBNAME  > ${WORKDIR}/dump

{% elif item.source.startswith('mongo://') %}

ARGS=""

{% if item.db|default(False) %}
ARGS="--db {{ item.db }}"
{% endif %}

{% for colname in item.exclude_collection|default([]) %}
ARGS="$ARGS --excludeCollection={{ colname }}"
{% endfor %}

{% if not item.exclude_collection|default([]) %}
ARGS="$ARGS --oplog"
{% endif %}

{% if backup_mongo_user is defined %}
ARGS="$ARGS --username={{ backup_mongo_user }}"
{% endif %}

{% if backup_mongo_password is defined %}
ARGS="$ARGS --password={{ backup_mongo_password }}"
{% endif %}

{% if backup_mongo_port is defined %}
ARGS="$ARGS --port {{ backup_mongo_port }}"
{% endif %}

mongodump --out $WORKDIR/dump $ARGS

{% elif item.source.startswith('redis://') %}

redis-cli --rdb ${WORKDIR}/dump

{% endif %}

{% for action in item.pre_actions|default([]) %}
{{ action }}
{% endfor %}
